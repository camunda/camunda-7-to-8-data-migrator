<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
	  <groupId>org.camunda.community.migration</groupId>
	  <artifactId>camunda-7-to-8-migration-analyzer</artifactId>
	  <version>0.2.0-alpha2-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-7-to-8-migration-analyzer-webapp</artifactId>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>com.slack.api</groupId>
      <artifactId>slack-api-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.camunda.community.migration</groupId>
      <artifactId>camunda-7-to-8-migration-analyzer-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
      <version>5.4.0</version>
    </dependency>
 <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>5.4.0</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <!-- Frontend Maven Plugin -->
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.15.1</version>
        <configuration>
            <installDirectory>target</installDirectory>
        </configuration>
         
        <executions>
          <!-- Step 1: Install Node.js & npm -->
          <execution>
            <id>install-node-and-npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v22.9.0</nodeVersion>  <!-- Specify Node.js version -->
              <npmVersion>11.0.0</npmVersion>    <!-- Specify npm version -->
            </configuration>
          </execution>

          <!-- Step 2: Install npm dependencies -->
          <execution>
            <id>npm-install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
              <workingDirectory>src/main/javascript</workingDirectory> <!-- Set correct path -->
            </configuration>
          </execution>

          <!-- Step 3: Run the npm "package" task -->
          <execution>
            <id>npm-package</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run package</arguments>
              <workingDirectory>src/main/javascript</workingDirectory> <!-- Path to frontend -->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layout>ZIP</layout>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
              <goal>repackage</goal>
            </goals>
          </execution>
          <execution>
            <id>ghcr-image-version</id>
            <goals>
              <goal>build-image-no-fork</goal>
            </goals>
            <phase>deploy</phase>
            <configuration>
              <image>
                <name>ghcr.io/camunda-community-hub/camunda-7-to-8-migration/migration-analyzer:${project.version}</name>
              </image>
            </configuration>
          </execution>
          <execution>
            <id>ghcr-image-latest</id>
            <goals>
              <goal>build-image-no-fork</goal>
            </goals>
            <phase>deploy</phase>
            <configuration>
              <image>
                <name>ghcr.io/camunda-community-hub/camunda-7-to-8-migration/migration-analyzer</name>
              </image>
            </configuration>
          </execution>
          <execution>
            <id>dockerhub-image-version</id>
            <goals>
              <goal>build-image-no-fork</goal>
            </goals>
            <phase>deploy</phase>
            <configuration>
              <image>
                <name>camundacommunityhub/migration-analyzer:${project.version}</name>
              </image>
            </configuration>
          </execution>
          <execution>
            <id>dockerhub-image-latest</id>
            <goals>
              <goal>build-image-no-fork</goal>
            </goals>
            <phase>deploy</phase>
            <configuration>
              <image>
                <name>camundacommunityhub/migration-analyzer</name>
              </image>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>