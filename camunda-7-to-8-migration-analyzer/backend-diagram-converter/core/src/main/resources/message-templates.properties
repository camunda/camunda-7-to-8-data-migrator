#
# Building blocks
#
template.expression-transformation-result=Please review transformed expression: '{{ oldExpression }}' -> '{{ newExpression }}'.
template.expression-transformation-hint=Transformed expression: '{{ oldExpression }}' -> '{{ newExpression }}'.
template.supported-attribute-prefix=Attribute '{{ attributeLocalName }}' on '{{ elementLocalName }}' was mapped.
template.supported-attribute-expression={{ templates.supported-attribute-prefix }} {{ templates.expression-transformation-result }}
template.attribute-not-supported-prefix=Attribute '{{ attributeLocalName }}' with value '{{ attributeValue }}' on '{{ elementLocalName }}' is not supported.
template.element-not-supported-prefix=Element '{{ elementLocalName }}' is not supported in Zeebe version '{{ semanticVersion }}'.
template.element-not-transformable-prefix=Element '{{ elementLocalName }}' cannot be transformed.
template.element-transformed-prefix=Element '{{ elementLocalName }}' was transformed.
template.business-key-not-supported=businessKey has to be a process variable in Zeebe.
template.execution-not-available='execution' is not available in FEEL.
template.method-not-possible=Method invocation is not possible in FEEL.
#
# Hints
#
collection-hint.message=Collecting results in a multi instance is now natively possible with Zeebe. Please review.
collection-hint.severity=TASK
#
element-not-supported-hint.message={{ templates.element-not-supported-prefix }} Please review.
element-not-supported-hint.severity=WARNING
#
call-activity-no-called-element-hint.message=There has to be a calledElement present on the call activity. Please keep in mind that CMMN is not supported with Zeebe.
call-activity-no-called-element-hint.severity=WARNING
#
local-variable-propagation-not-supported-hint.message=Local variable propagation is not supported anymore. Please review your variable mapping.
local-variable-propagation-not-supported-hint.severity=TASK
#
in-all-hint.message=Element 'camunda:in' with attribute 'variables="all"' is removed. It is default in Zeebe.
in-all-hint.severity=INFO
#
out-all-hint.message=Element 'camunda:out' with attribute 'variables="all"' is mapped to 'propagateAllChildVariables="true"'.
out-all-hint.severity=INFO
#
correlation-key-hint.message=Please define a correlation key.
correlation-key-hint.severity=TASK
#
connector-hint.message=Connectors will be defined as jobs in Zeebe.
connector-hint.severity=INFO
#
# Camunda Attribute
#
attribute-not-supported.message={{ templates.attribute-not-supported-prefix }}
attribute-not-supported.severity=WARNING
#
attribute-removed.message=Unused attribute '{{ attributeLocalName }}' on '{{ elementLocalName }}' is removed.
attribute-removed.severity=INFO
#
completion-condition.message=Completion condition: {{ templates.expression-transformation-result }}
completion-condition.severity=REVIEW
#
completion-condition-execution.message=Completion condition: {{ templates.expression-transformation-hint }} {{ templates.execution-not-available }}
completion-condition-execution.severity=TASK
#
completion-condition-method.message=Completion condition: {{ templates.expression-transformation-hint }} {{ templates.method-not-possible }}
completion-condition-method.severity=TASK
#
condition-expression.message=Condition expression: {{ templates.expression-transformation-result }}
condition-expression.severity=REVIEW
#
condition-expression-feel.message=FEEL Condition expression: {{ templates.expression-transformation-result }} Check for custom FEEL functions as they are not supported by Zeebe.
condition-expression-feel.severity=REVIEW
#
condition-expression-execution.message=Condition expression: {{ templates.expression-transformation-hint }} {{ templates.execution-not-available }}
condition-expression-execution.severity=TASK
#
condition-expression-method.message=Condition expression: {{ templates.expression-transformation-hint }} {{ templates.method-not-possible }}
condition-expression-method.severity=TASK
#
candidate-groups.message={{ templates.supported-attribute-expression }}
candidate-groups.link=https://docs.camunda.io/docs/components/modeler/bpmn/user-tasks/#assignments
candidate-groups.severity=REVIEW
#
candidate-users.message={{ templates.supported-attribute-expression }}
candidate-users.link=https://docs.camunda.io/docs/components/modeler/bpmn/user-tasks/#assignments
candidate-users.severity=REVIEW
#
assignee.message={{ templates.supported-attribute-expression }}
assignee.severity=REVIEW
assignee.link=https://docs.camunda.io/docs/components/modeler/bpmn/user-tasks/#assignments
#
due-date.message={{ templates.supported-attribute-expression }}
due-date.severity=REVIEW
due-date.link=https://docs.camunda.io/docs/components/modeler/bpmn/user-tasks/#scheduling
#
follow-up-date.message={{ templates.supported-attribute-expression }}
follow-up-date.severity=REVIEW
follow-up-date.link=https://docs.camunda.io/docs/components/modeler/bpmn/user-tasks/#scheduling
#
collection.message={{ templates.supported-attribute-expression }}
collection.severity=REVIEW
#
collection-execution.message={{ templates.supported-attribute-prefix }} {{ templates.expression-transformation-hint }} {{ templates.execution-not-available }}
collection-execution.severity=TASK
#
collection-method.message={{ templates.supported-attribute-prefix }} {{ templates.expression-transformation-hint }} {{ templates.method-not-possible }}
collection-method.severity=TASK
#
decision-ref.message={{ templates.supported-attribute-expression }}
decision-ref.severity=REVIEW
#
form-ref.message={{ templates.supported-attribute-expression }}
form-ref.severity=REVIEW
#
called-element.message={{ templates.supported-attribute-expression }}
called-element.severity=REVIEW
#
result-variable-business-rule.message={{ templates.supported-attribute-prefix }}
result-variable-business-rule.severity=REVIEW
#
result-variable-rest.message={{ templates.supported-attribute-prefix }} Is now available as header '{{ headerName }}'.
result-variable-rest.severity=REVIEW
#
element-variable.message={{ templates.supported-attribute-prefix }} Is set to Zeebe input element.
element-variable.severity=INFO
#
resource.message={{ templates.supported-attribute-prefix }} Is set to header {{ headerName }}.
resource.severity=REVIEW
#
topic.message={{ templates.supported-attribute-prefix }} Is set as job type.
topic.severity=REVIEW
#
form-key.message={{ templates.supported-attribute-prefix }} Form key is now set in Zeebe namespace.
form-key.severity=REVIEW
#
delegate-implementation.message={{ templates.supported-attribute-prefix }} Delegate call to '{{ binding }}' was transformed to job type '{{ jobType }}'. Please review your implementation.
delegate-implementation.severity=REVIEW
#
delegate-implementation-no-default-job-type.message=Delegate call of type '{{ implementationType }}' bound to '{{ binding }}' was reset.
delegate-implementation-no-default-job-type.severity=INFO
#
script-job-type.message=Element '{{ elementLocalName }}' was transformed. Currently, script tasks are implemented like service tasks with job type '{{ jobType }}'. Please review your implementation.
script-job-type.severity=REVIEW
#
result-variable-internal-script.message=Result variable is set to Zeebe script result variable.
result-variable-internal-script.severity=INFO
#
# Camunda Element
#
input-output-parameter-is-no-expression.message={{ templates.element-not-transformable-prefix }} Parameter '{{ parameterName }}': Only String or Expression is supported as Input/Output.
input-output-parameter-is-no-expression.severity=WARNING
#
input-output-parameter.message={{ templates.element-transformed-prefix }} Parameter '{{ parameterName }}': {{ templates.expression-transformation-result }}
input-output-parameter.severity=REVIEW
#
input-output-parameter-execution.message={{ templates.element-transformed-prefix }} Parameter '{{ parameterName }}': {{ templates.expression-transformation-hint }} {{ templates.execution-not-available }}
input-output-parameter-execution.severity=TASK
#
input-output-parameter-method.message={{ templates.element-transformed-prefix }} Parameter '{{ parameterName }}': {{ templates.expression-transformation-hint }} {{ templates.method-not-possible }}
input-output-parameter-method.severity=TASK
#
in-out-business-key-not-supported.message={{ templates.element-not-transformable-prefix }} {{ templates.business-key-not-supported }}
in-out-business-key-not-supported.severity=WARNING
#
connector-id.message={{ templates.element-transformed-prefix }} Connector id is transformed to Zeebe job type.
connector-id.severity=REVIEW
#
property.message={{ templates.element-transformed-prefix }} Property '{{ propertyName}}' lives in the Zeebe namespace now.
property.severity=INFO
#
execution-listener.message=Listener at '{{ event }}' with implementation '{{ implementation }}' cannot be transformed. Execution Listeners do not exist in Zeebe.
execution-listener.severity=WARNING
#
task-listener.message=Listener at '{{ event }}' with implementation '{{ implementation }}' cannot be transformed. Task Listeners do not exist in Zeebe.
task-listener.severity=WARNING
#
failed-job-retry-time-cycle.message={{ templates.element-transformed-prefix }} The timecycle '{{ timecycle }}' was transformed to '{{ retries }}' retries. Please review. Please keep in mind that the timeout '{{ timeout }}' between the retries has to be defined by your worker implementation.
failed-job-retry-time-cycle.severity=REVIEW
#
failed-job-retry-time-cycle-removed.message={{ templates.element-not-transformable-prefix }} Retries can only be applied to activities executed by a job worker. Timecycle was '{{ timecycle }}'.
failed-job-retry-time-cycle-removed.severity=INFO
#
failed-job-retry-time-cycle-error.message={{ templates.element-not-transformable-prefix }} Timecycle '{{ timecycle }}' is not defined correctly.
failed-job-retry-time-cycle-error.severity=WARNING
#
error-event-definition.message={{ templates.element-not-transformable-prefix }}
error-event-definition.severity=WARNING
#
form-data.message={{ templates.element-not-transformable-prefix }} Please define a form key instead.
form-data.severity=TASK
#
potential-starter.message={{ templates.element-not-transformable-prefix }} Potential Starters are currently not managed by Zeebe.
potential-starter.severity=WARNING
#
field-content.message={{ templates.element-not-transformable-prefix }} Field injection is not available in Zeebe. Instead, please use Input mappings.
field-content.severity=WARNING
#
camunda-script.message={{ templates.element-not-transformable-prefix }} Script '{{ script }}' with format '{{ scriptFormat }}' on '{{ parentElement }}'.
camunda-script.severity=WARNING
#
# BPMN element
#
element-not-supported.message={{ templates.element-not-supported-prefix }}
element-not-supported.severity=WARNING
#
element-available-in-future-version.message={{ templates.element-not-supported-prefix }} It is available in version '{{ futureVersion }}'.
element-available-in-future-version.severity=WARNING
#
script.message=Script was set to header 'script'. Please review.
script.severity=REVIEW
#
loop-cardinality.message=Loop cardinality is currently not supported.
loop-cardinality.severity=WARNING
#
inclusive-gateway-join.message=A joining inclusive gateway is not supported.
inclusive-gateway-join.severity=WARNING
#
conditional-flow.message=A Conditional flow is not supported.
conditional-flow.severity=WARNING
#
internal-script.message=Script is transformed to Zeebe script.
internal-script.severity=INFO
#
timer-expression-not-supported.message=Timer of type '{{ timerType }}' with value '{{ timerExpression }}' is not supported for event type '{{ eventType }}' in Zeebe version '{{ semanticVersion }}'.
timer-expression-not-supported.severity=WARNING
#
timer-expression-mapped.message=Timer expression was transformed: {{ templates.expression-transformation-result }}
timer-expression-mapped.severity=REVIEW
#
resource-on-conditional-flow.message=Please translate the content from '{{ resource }}' to a valid FEEL expression.
resource-on-conditional-flow.severity=TASK
#
#
script-on-conditional-flow.message=Please translate the {{ language }} script from '{{ script }}' to a valid FEEL expression.
script-on-conditional-flow.severity=TASK
#
# BPMN attribute
#
script-format.message=Script format '{{ scriptFormat }}' was set to header '{{ headerName }}'. Please review.
script-format.severity=REVIEW
#
script-format-missing.message=Script format could not be found. Please review.
script-format-missing.severity=TASK
#
escalation-code.message=Escalation code is transformed from '{{ oldCode }}' to '{{ newCode }}'. Please review.
escalation-code.severity=REVIEW
#
error-code.message=Error code is transformed from '{{ oldCode }}' to '{{ newCode }}'. Please review.
error-code.severity=REVIEW
#
#
escalation-code-no-expression.message=Escalation code cannot be an expression.
escalation-code-no-expression.severity=WARNING
#
error-code-no-expression.message=Error code cannot be an expression.
error-code-no-expression.severity=WARNING
#