<!-- Example Maven project for creating a variable interceptor -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.camunda</groupId>
        <artifactId>camunda-7-to-8-data-migrator-examples</artifactId>
        <version>0.1.0-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>

    <artifactId>my-variable-interceptor</artifactId>
    <packaging>jar</packaging>

    <name>Camunda 7 to 8 Data Migrator - Examples - Variable Interceptor</name>
    <description>Example variable interceptor for Camunda 7 to 8 Data Migrator</description>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.camunda</groupId>
            <artifactId>camunda-7-to-8-data-migrator-core</artifactId>
            <version>0.1.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <licenseSets>
                        <licenseSet>
                            <header>${project.basedir}/../../license/header.txt</header>
                        </licenseSet>
                    </licenseSets>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
